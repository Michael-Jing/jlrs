name: CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

  workflow_dispatch:

jobs:
  test-linux:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-fail }}
    strategy:
      matrix:
        rust: [stable, beta]
        allow-fail: [false]
        include:
          - rust: nightly
            allow-fail: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup Julia environment
        uses: julia-actions/setup-julia@v1
        with:
          version: '~1.8.0-0'

      - name: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Run tests
        run: |
          export JULIA_DIR="$(dirname $(dirname $(which julia)))"
          export LD_LIBRARY_PATH="${JULIA_DIR}/lib:${JULIA_DIR}/lib/julia:${LD_LIBRARY_PATH}"
          cargo test --all-features --verbose -- --test-threads=1

  test-windows:
    runs-on: windows-latest
    continue-on-error: ${{ matrix.allow-fail }}
    strategy:
      matrix:
        rust: [stable-x86_64-pc-windows-gnu, beta-x86_64-pc-windows-gnu]
        allow-fail: [false]
        include:
          - rust: nightly-x86_64-pc-windows-gnu
            allow-fail: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup Julia environment
        uses: julia-actions/setup-julia@v1
        with:
          version: '~1.8.0-0'

      - name: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run tests
        run: |
          cargo test --all-features--verbose -- --test-threads=1

  test-windows-lts:
    runs-on: windows-latest
    continue-on-error: ${{ matrix.allow-fail }}
    strategy:
      matrix:
        rust: [stable-x86_64-pc-windows-gnu, beta-x86_64-pc-windows-gnu]
        allow-fail: [false]
        include:
          - rust: nightly-x86_64-pc-windows-gnu
            allow-fail: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup Julia environment
        uses: julia-actions/setup-julia@v1
        with:
          version: '1.6'

      - name: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run tests
        run: |
          cargo test --features tokio-rt,async-std-rt,jlrs-ndarray,f16,jlrs-derive,sync-rt,ccall,lts --verbose -- --test-threads=1

  test-linux-lts:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-fail }}
    strategy:
      matrix:
        rust: [stable, beta]
        allow-fail: [false]
        include:
          - rust: nightly
            allow-fail: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup Julia environment
        uses: julia-actions/setup-julia@v1
        with:
          version: '1.6'

      - name: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Run tests
        run: |
          export JULIA_DIR="$(dirname $(dirname $(which julia)))"
          export LD_LIBRARY_PATH="${JULIA_DIR}/lib:${JULIA_DIR}/lib/julia:${LD_LIBRARY_PATH}"
          cargo test --features tokio-rt,async-std-rt,jlrs-ndarray,f16,jlrs-derive,lts,sync-rt,ccall --verbose -- --test-threads=1

  docs:
    runs-on: ubuntu-latest
    needs: test-linux
    steps:
      - uses: actions/checkout@v2

      - name: Setup Julia environment
        uses: julia-actions/setup-julia@v1
        with:
          version: '~1.8.0-0'

      - name: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Set env
        run: |
          export JULIA_DIR=$(dirname $(dirname $(which julia)))
          echo "LD_LIBRARY_PATH=${JULIA_DIR}/lib:${JULIA_DIR}/lib/julia:${LD_LIBRARY_PATH}" >> $GITHUB_ENV
          echo "JULIA_DIR=${JULIA_DIR}" >> $GITHUB_ENV

      - name: Build Docs
        run: cargo doc --features docs
